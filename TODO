
The features that may set of a new release and things to look out for:
  - Add an interactive gui
  - Add transition paths to various install/distribution systems (autotools, icmake, aap etc)
  - Move from MD5 to SHA1 (just because MD5 is not secure and everybody should move away from it, just to be sure)
  - Create a single "o" directory with all files in there,
    make sure all files are named uniquely by using md5hash(dirname)_filename.o as output.
  - Insert BOOST as argument parser, file handler and smart-pointer thingy.
  - Update, freshen, the tree command output
	- Enable a seperate version of wordexp / write my own.
	  maybe steal it from elmo: http://www.filewatcher.com/p/elmo-1.3.2.tar.gz.536768/elmo-1.3.2/ChangeLog.html 
  - Update Filesystem/cwd.cc to correctly work on cygwin.
  - Use __CYGWIN__ to exclude wordexp usage
  -  Write documentation on the ordering of library linking arguments.
      Showing that global header usage influences this and that it's
      a real problem with a solution in ccResolutions (force sequence
      by placing both libraries in both header resolution lines).
  -  Lib support in A-A-P and Makefiles.
  -  Make argument identification configurable using a configuration file.
  -  Take a look at source-header separation issue for library creation.
  -  Allow object output rebasing: output object files to a directory
     (or directory heirarchy) not in the source tree.
      This can be used when sources are read-only.
  ?  Multiprocessing support. (use ccbuild makefile;make -l20 if needed)
      (make can already do this for us, if needed. A-A-P probably too)
  ?? Time skew detection (warn when times are in the future/craeted time not updated)
  ?  Environment variables: CXXFLAGS, LDFLAGS, CXX etc. Currently, most have
     already got program flags.

Also see the list of inline TODO's generated by "sh tools/todo.sh"

- Tree in XML
- Fork on build
V Implicit build on source file only argument.
- Better library support
- Archive per class

