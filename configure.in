dnl Process this file with autoconf to produce a configure script.

dnl Boilerplate
AC_INIT(ccbuild, 2.0.0alpha)
AC_CONFIG_SRCDIR(src/ccbuild.cc)
AM_INIT_AUTOMAKE
AC_LANG([C++]) #Thanks Jesse.
AC_PROG_CXX
AC_PROG_CXXCPP

# Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_STDBOOL
AC_C_CONST
AC_TYPE_INT16_T
AC_TYPE_INT32_T
AC_TYPE_INT8_T
AC_TYPE_SIZE_T
AC_TYPE_UINT16_T
AC_TYPE_UINT32_T
AC_TYPE_UINT8_T

# Checks for library functions.
AC_HEADER_STDC
AC_FUNC_MALLOC
AC_FUNC_REALLOC
AC_FUNC_STAT
AC_CHECK_FUNCS([getcwd memset mkdir])

AM_PROG_LEX
if ! test "y$LEX" = "yflex"; then
    if ! test "y$LEX" = "ylex"; then
        AC_MSG_FAILURE([*** flex or lex required])
    fi
fi

#Below you can use the last line of ccbuild deps (ccbuild deps |tail -n1)
#AC_CHECK_HEADERS(sys/types.h set iosfwd map typeinfo cassert vector cstring string sstream iostream functional utility omp.h,,AC_MSG_ERROR([Required header file missing.]))
globalHeaders="`ccbuild -C src --verbose deps ccbuild.cc|tail -n1`"
globalHeaders="algorithm bobcat/process boost/circular_buffer.hpp boost/lexical_cast.hpp cassert cstdio cstdlib cstring fstream functional getopt.h glob.h iosfwd iostream iterator map numeric omp.h openssl/evp.h set sstream stack string sys/stat.h sys/types.h sys/utsname.h typeinfo unistd.h utility vector" #Output of 2.0.0 with --verbose. earlier versions did not support this feature.
AC_CHECK_HEADERS($globalHeaders,,AC_MSG_ERROR([Required header file missing.]))

dnl Check for openssl
PKG_CHECK_MODULES(DEPS, openssl >= 0.9.0)
AC_SUBST(DEPS_CFLAGS)
AC_SUBST(DEPS_LIBS)


#dnl libgcrypt
#gcrypt=0
#AC_MSG_CHECKING(for libgcrypt)
#AM_PATH_LIBGCRYPT(1.2.0, gcrypt=1)

#if test $gcrypt = 0
#then
#  AC_MSG_ERROR([ccbuild needs libgcrypt for the MD5 algoritm])
#fi

AC_OUTPUT(Makefile)


